#!/bin/bash

### BEGIN INIT INFO
# Provides:             iptables
# Required-Start:       
# Required-Stop:        
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    start and stop the host personnal firewall
### END INIT INFO

# /etc/init.d/firewall: start and stop the host personnal firewall
# This script change the packet filter state according to a file
# require linux kernel 2.4 or greater, iptables, iptables-restore and iptables-save functions

########################################################################

## IPv4 parameters ##

# file name for saving
V4_SAVE_FILE=/etc/FirewallV4.sv
V4_EMR_SAVE_FILE=/etc/FirewallV4.emr

# Save scripts
V4_PRE_SAVE=/etc/FirewallV4.presave
V4_POST_SAVE=/etc/FirewallV4.postsave

# Start scripts
V4_PRE_START=/etc/FirewallV4.prestart
V4_POST_START=/etc/FirewallV4.poststart

# Stop scripts
V4_PRE_STOP=/etc/FirewallV4.prestop
V4_POST_STOP=/etc/FirewallV4.poststop

# iptables software path
V4_IPTABLES=/sbin/iptables
V4_LOADER=/sbin/iptables-restore
V4_SAVER=/sbin/iptables-save


## IPv6 parameters ##

# file name for saving
V6_SAVE_FILE=/etc/FirewallV6.sv
V6_EMR_SAVE_FILE=/etc/FirewallV6.emr

# Save scripts
V6_PRE_SAVE=/etc/FirewallV6.presave
V6_POST_SAVE=/etc/FirewallV6.postsave

# Start scripts
V6_PRE_START=/etc/FirewallV6.prestart
V6_POST_START=/etc/FirewallV6.poststart

# Stop scripts
V6_PRE_STOP=/etc/FirewallV6.prestop
V6_POST_STOP=/etc/FirewallV6.poststop

# iptables software path
V6_IPTABLES=/sbin/ip6tables
V6_LOADER=/sbin/ip6tables-restore
V6_SAVER=/sbin/ip6tables-save

## Global Parameters ##

# Save scripts
PRE_SAVE=/etc/Firewall.presave
POST_SAVE=/etc/Firewall.postsave

# Start scripts
PRE_START=/etc/Firewall_pre-start.sh
POST_START=/etc/Firewall_post-start.sh

# Stop scripts
PRE_STOP=/etc/Firewall_pre-stop.sh
POST_STOP=/etc/Firewall_post-stop.sh

# return value
rval=0

########################################################################

# Are we root ?
if [ $UID -ne 0 ]; then
	echo "You must be root to use the firewall !"
	exit 1
fi

# are the iptables softwares present on the system ?
if [ ! -x $V4_IPTABLES -o ! -x $V4_LOADER -o ! -x $V4_SAVER ]; then 
	echo "iptables binaries are not present !"
	exit 1
fi

# are the ip6tables softwares present on the system ?
if [ ! -x $V6_IPTABLES -o ! -x $V6_LOADER -o ! -x $V6_SAVER ]; then 
	echo "ip6tables binaries are not present !"
	exit 1
fi

########################################################################

# This function append the data from the save file to the running firewall
start_V4_firewall () {
echo -n "Starting local IPv4 firewall : "
if [ -f ${V4_SAVE_FILE} ]; then
	[ -x ${V4_PRE_START} ] && $V4_PRE_START
	$V4_LOADER < ${V4_SAVE_FILE}
	[ -x ${V4_POST_START} ] && $V4_POST_START
	echo "done."
else
	rval=1
	echo "not done !"
fi
}

# This function clear the running firewall
stop_V4_firewall () {
[ -x ${V4_PRE_STOP} ] && $V4_PRE_STOP
$V4_SAVER > ${V4_EMR_SAVE_FILE}
echo "IPv4 firewall saved to ${V4_EMR_SAVE_FILE}."
echo -n "Stopping local IPv4 firewall : "
# We set the built-in chain policy to ACCEPT
for ch in INPUT OUTPUT FORWARD; do
	$V4_IPTABLES -P $ch ACCEPT
done
# We flush all the chains
for ch in `${V4_IPTABLES} -L | grep "^Chain" | sed -e "s/Chain\ //; s/\ (.*)$//"`; do
	$V4_IPTABLES -F $ch
done
# We delete all the user-defined chains
$V4_IPTABLES -X
[ -x ${V4_POST_STOP} ] && $V4_POST_STOP
echo "done."
}

# This function save the running firewave.
save_V4_firewall () {
[ -x $V4_PRE_SAVE ] && $V4_PRE_SAVE
[ -f ${V4_SAVE_FILE} ] && mv ${V4_SAVE_FILE} ${V4_SAVE_FILE}~
$V4_SAVER > ${V4_SAVE_FILE}
chmod o-rwx ${V4_SAVE_FILE}
echo "IPv4 firewall saved to ${V4_SAVE_FILE}."
[ -x ${V4_POST_SAVE} ] && $V4_POST_SAVE
}

# This function append the data from the save file to the running firewall
start_V6_firewall () {
echo -n "Starting local IPv6 firewall : "
if [ -f ${V6_SAVE_FILE} ]; then
	[ -x ${V6_PRE_START} ] && $V6_PRE_START
	$V6_LOADER < ${V6_SAVE_FILE}
	[ -x ${V6_POST_START} ] && $V6_POST_START
	echo "done."
else
	rval=1
	echo "not done !"
fi
}

# This function clear the running firewall
stop_V6_firewall () {
[ -x ${V6_PRE_STOP} ] && $V6_PRE_STOP
$V6_SAVER > ${V6_EMR_SAVE_FILE}
echo "IPv6 firewall saved to ${V6_EMR_SAVE_FILE}."
echo -n "Stopping local IPv6 firewall : "
# We set the built-in chain policy to ACCEPT
for ch in INPUT OUTPUT FORWARD; do
	$V6_IPTABLES -P $ch ACCEPT
done
# We flush all the chains
for ch in `${V6_IPTABLES} -L | grep "^Chain" | sed -e "s/Chain\ //; s/\ (.*)$//"`; do
	$V6_IPTABLES -F $ch
done
# We delete all the user-defined chains
$V6_IPTABLES -X
[ -x ${V6_POST_STOP} ] && $V6_POST_STOP
echo "done."
} 

# This function save the running firewave.
save_V6_firewall () {
[ -x $V6_PRE_SAVE ] && $V6_PRE_SAVE
[ -f ${V6_SAVE_FILE} ] && mv ${V6_SAVE_FILE} ${V6_SAVE_FILE}~
$V6_SAVER > ${V6_SAVE_FILE}
chmod o-rwx ${V6_SAVE_FILE}
echo "IPv6 firewall saved to ${V6_SAVE_FILE}."
[ -x $V6_POST_SAVE ] && $V6_POST_SAVE
}

# This fonction start V4 and V6 firewall
start_firewall () {
[ -x ${PRE_START} && ${PRE_START}
start_V4_firewall
start_V6_firewall
[ -x ${POST_START} && ${POST_START}
}

# This function stop V4 and V6 firewall
stop_firewall () {
[ -x ${PRE_STOP} && ${PRE_STOP}
stop_V4_firewall
stop_V6_firewall
[ -x ${POST_STOP} && ${POST_STOP}
}

# This function save V4 and V6 firewall
save_firewall () {
[ -x ${PRE_SAVE} && ${PRE_SAVE}
save_V4_firewall
save_V6_firewall
[ -x ${POST_SAVE} && ${POST_SAVE}
}

########################################################################

# Main
case "$1" in

start)
start_firewall
;;
stop)
stop_firewall
;;
restart)
stop_firewall
start_firewall
;;
save)
save_firewall
;;

start-v4)
start_V4_firewall
;;
stop-v4)
stop_V4_firewall
;;
restart-v4)
stop_V4_firewall
start_V4_firewall
;;
save-v4)
save_V4_firewall
;;

start-v6)
start_V6_firewall
;;
stop-v6)
stop_V6_firewall
;;
restart-v6)
stop_V6_firewall
start_V6_firewall
;;
save-v6)
save_V6_firewall
;;

*)
echo "Usage : $0 {start|stop|restart|save|start-v4|stop-v4|restart-v4|save-v4|start-v6|stop-v6|restart-v6|save-v6}"
exit 1
;;

esac

exit $rval
