#!/bin/bash

### BEGIN INIT INFO
# Provides:             iptables
# Required-Start:       
# Required-Stop:        
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    start and stop the host personnal firewall
### END INIT INFO

# /etc/init.d/firewall: start and stop the host personnal firewall
# This script change the packet filter state according to a file
# Requires linux kernel 2.4 or greater, iptables, iptables-restore and
# iptables-save functions.

########################################################################
# Parameters (also available in pre/post scripts)

## IPv4 parameters ##

# File name for saving
V4_SAVE_FILE=/etc/FirewallV4.sv
V4_EMR_SAVE_FILE=/etc/FirewallV4.emr

# Save scripts
V4_PRE_SAVE=/etc/FirewallV4.presave
V4_POST_SAVE=/etc/FirewallV4.postsave

# Start scripts
V4_PRE_START=/etc/FirewallV4.prestart
V4_POST_START=/etc/FirewallV4.poststart

# Stop scripts
V4_PRE_STOP=/etc/FirewallV4.prestop
V4_POST_STOP=/etc/FirewallV4.poststop

# Iptables software path
V4_IPTABLES=/sbin/iptables
V4_LOADER=/sbin/iptables-restore
V4_SAVER=/sbin/iptables-save

## IPv6 parameters ##

# File name for saving
V6_SAVE_FILE=/etc/FirewallV6.sv
V6_EMR_SAVE_FILE=/etc/FirewallV6.emr

# Save scripts
V6_PRE_SAVE=/etc/FirewallV6.presave
V6_POST_SAVE=/etc/FirewallV6.postsave

# Start scripts
V6_PRE_START=/etc/FirewallV6.prestart
V6_POST_START=/etc/FirewallV6.poststart

# Stop scripts
V6_PRE_STOP=/etc/FirewallV6.prestop
V6_POST_STOP=/etc/FirewallV6.poststop

# Iptables software path
V6_IPTABLES=/sbin/ip6tables
V6_LOADER=/sbin/ip6tables-restore
V6_SAVER=/sbin/ip6tables-save

## Common parameters (IPv4 + IPv6) ##

# Save scripts
PRE_SAVE=/etc/Firewall.presave
POST_SAVE=/etc/Firewall.postsave

# Start scripts
PRE_START=/etc/Firewall.prestart
POST_START=/etc/Firewall.poststart

# Stop scripts
PRE_STOP=/etc/Firewall.prestop
POST_STOP=/etc/Firewall.poststop

# Return value
rval=0

########################################################################
# Checks

# Are we root ?
if [ $UID -ne 0 ]; then
	echo "You must be root to use the firewall !"
	exit 1
fi

# Are the iptables softwares present on the system ?
if [ ! -x ${V4_IPTABLES} -o ! -x ${V4_LOADER} -o ! -x ${V4_SAVER} ]; then 
	echo "iptables binaries are not present !"
	exit 1
fi

# Are the ip6tables softwares present on the system ?
if [ ! -x ${V6_IPTABLES} -o ! -x ${V6_LOADER} -o ! -x ${V6_SAVER} ]; then 
	echo "ip6tables binaries are not present !"
	exit 1
fi

########################################################################
# Functions

# Append the data from the save file to the running firewall
function start_V4_firewall {

	echo -n "Starting local IPv4 firewall : "

	if [ -f ${V4_SAVE_FILE} ]; then

		[ -f ${V4_PRE_START} ] && source ${V4_PRE_START}

		$V4_LOADER < ${V4_SAVE_FILE}

		[ -f ${V4_POST_START} ] && source ${V4_POST_START}

		echo "done."

	else

		rval=1
		echo "not done !"

	fi

}

# Clear the running firewall
function stop_V4_firewall {

	local ch

	[ -f ${V4_PRE_STOP} ] && source ${V4_PRE_STOP}

	$V4_SAVER > ${V4_EMR_SAVE_FILE}
	echo "IPv4 firewall saved to ${V4_EMR_SAVE_FILE}."

	echo -n "Stopping local IPv4 firewall : "

	# We set the built-in chain policy to ACCEPT
	for ch in INPUT OUTPUT FORWARD; do
		$V4_IPTABLES -P ${ch} ACCEPT
	done

	# We flush all the chains
	for ch in $($V4_IPTABLES -L | grep "^Chain" | sed -e "s/Chain\ //; s/\ (.*)$//") ; do
		$V4_IPTABLES -F ${ch}
	done

	# We delete all the user-defined chains
	$V4_IPTABLES -X

	[ -f ${V4_POST_STOP} ] && source ${V4_POST_STOP}

	echo "done."

}

# Save the running firewall
function save_V4_firewall {

	[ -f ${V4_PRE_SAVE} ] && source ${V4_PRE_SAVE}

	[ -f ${V4_SAVE_FILE} ] && mv ${V4_SAVE_FILE} ${V4_SAVE_FILE}~

	$V4_SAVER > ${V4_SAVE_FILE}
	chmod o-rwx ${V4_SAVE_FILE}
	echo "IPv4 firewall saved to ${V4_SAVE_FILE}."

	[ -f ${V4_POST_SAVE} ] && source ${V4_POST_SAVE}
}

# Append the data from the save file to the running firewall
function start_V6_firewall {

	echo -n "Starting local IPv6 firewall : "

	if [ -f ${V6_SAVE_FILE} ]; then

		[ -f ${V6_PRE_START} ] && source ${V6_PRE_START}

		$V6_LOADER < ${V6_SAVE_FILE}

		[ -f ${V6_POST_START} ] && source ${V6_POST_START}

		echo "done."

	else

		rval=1

		echo "not done !"
	fi
}

# Clear the running firewall
function stop_V6_firewall {

	local ch

	[ -f ${V6_PRE_STOP} ] && source ${V6_PRE_STOP}

	$V6_SAVER > ${V6_EMR_SAVE_FILE}
	echo "IPv6 firewall saved to ${V6_EMR_SAVE_FILE}."

	echo -n "Stopping local IPv6 firewall : "

	# We set the built-in chain policy to ACCEPT
	for ch in INPUT OUTPUT FORWARD; do
		$V6_IPTABLES -P ${ch} ACCEPT
	done

	# We flush all the chains
	for ch in $($V6_IPTABLES -L | grep "^Chain" | sed -e "s/Chain\ //; s/\ (.*)$//") ; do
		$V6_IPTABLES -F ${ch}
	done

	# We delete all the user-defined chains
	$V6_IPTABLES -X

	[ -f ${V6_POST_STOP} ] && source ${V6_POST_STOP}

	echo "done."
} 

# Save the running firewave.
function save_V6_firewall {

	[ -f ${V6_PRE_SAVE} ] && source ${V6_PRE_SAVE}

	[ -f ${V6_SAVE_FILE} ] && mv ${V6_SAVE_FILE} ${V6_SAVE_FILE}~

	$V6_SAVER > ${V6_SAVE_FILE}
	chmod o-rwx ${V6_SAVE_FILE}
	echo "IPv6 firewall saved to ${V6_SAVE_FILE}."

	[ -f ${V6_POST_SAVE} ] && source ${V6_POST_SAVE}

}

# Start V4 and V6 firewall
function start_firewall {

	[ -f ${PRE_START} ] && source ${PRE_START}

	start_V4_firewall
	start_V6_firewall

	[ -f ${POST_START} ] && source ${POST_START}

}

# Stop V4 and V6 firewall
function stop_firewall {

	[ -f ${PRE_STOP} ] && source ${PRE_STOP}

	stop_V4_firewall
	stop_V6_firewall

	[ -f ${POST_STOP} ] && source ${POST_STOP}

}

# Save V4 and V6 firewall
function save_firewall {

	[ -f ${PRE_SAVE} ] && source ${PRE_SAVE}

	save_V4_firewall
	save_V6_firewall

	[ -f ${POST_SAVE} ] && source ${POST_SAVE}

}

########################################################################
# Main

case "${1}" in

	# IPv4 and IPv6
	start)
		start_firewall
	;;
	stop)
		stop_firewall
	;;
	restart)
		stop_firewall
		start_firewall
	;;
	save)
		save_firewall
	;;

	# IPv4 only
	start-v4)
		start_V4_firewall
	;;
	stop-v4)
		stop_V4_firewall
	;;
	restart-v4)
		stop_V4_firewall
		start_V4_firewall
	;;
	save-v4)
		save_V4_firewall
	;;

	# IPv6 only
	start-v6)
		start_V6_firewall
	;;
	stop-v6)
		stop_V6_firewall
	;;
	restart-v6)
		stop_V6_firewall
		start_V6_firewall
	;;
	save-v6)
		save_V6_firewall
	;;

	# Help
	*)
		echo "Usage : $0 {start|stop|restart|save|start-v4|stop-v4|restart-v4|save-v4|start-v6|stop-v6|restart-v6|save-v6}"
		exit 1
	;;

esac

exit ${rval}
