#!/bin/bash
# -*- sh -*-

: <<=cut

=head1 NAME

OnlyOffice - OnlyOffice

=head1 APPLICABLE SYSTEMS

Any system with OnlyOffice Document Server

=head1 CONFIGURATION

No configuration necessary.

=head1 INTERPRETATION

This plugin collects statistics from the OnlyOffice Document Server HTTP-API.

=head1 MAGIC MARKERS

  #%# family=manual
  #%# capabilities=autoconf

=head1 BUGS

None known

=head1 AUTHOR

laurent.spagnol@univ-reims.fr

=head1 LICENSE

GPLv2

=cut

########################################################################
#
# INSTALL:
#
#   apt -y install jq curl wget
#   wget -O onlyoffice_ https://raw.githubusercontent.com/lspagnol/misc-scripts/master/onlyoffice_documentserver
#   chmod +x onlyoffice_
#   mkdir /usr/local/share/munin
#   cp onlyoffice_documentserver /usr/local/share/munin
#   ln -s /usr/local/share/munin/onlyoffice_documentserver /etc/munin/plugins/onlyoffice_documentserver
#   service munin-node restart
#
########################################################################

. $MUNIN_LIBDIR/plugins/plugin.sh

########################################################################

function get_DS_STATS {
# Try with curl
if [ -f /usr/bin/curl ] ; then
	DS_STATS=$(curl -s -f -m 3 http://localhost:8000/info/info.json)
	[ -z "${DS_STATS}" ] && exit
else
	if [ -f /usr/bin/wget ] ; then
		wget -T2 -t1 -q -O /tmp/info.json http://localhost:8000/info/info.json
		if [ $? -eq 0 ] ; then
			DS_STATS=$(cat /tmp/info.json 2>/dev/null)
			[ -z "${DS_STATS}" ] && exit
		else
			echo "Please install curl or wget"
			exit 1
		fi
	fi
fi
}

########################################################################

if [ "$1" = "autoconf" ] ; then
        echo yes
        exit 0
fi

########################################################################

if [ "${1}" = "config" ] ; then

cat<<EOT
graph_category onlyoffice
graph_title Connexions OnlyOffice Document Server
graph_info This graph shows the connexions on OnlyOffice Document Server
graph_args --base 1000 -l 0
graph_vlabel number
graph_order connexions_limit connexions_peak_view connexions_peak_edit
connexions_limit.draw AREA
connexions_limit.label connexions limit
connexions_peak_view.label connexions peak view
connexions_peak_edit.label connexions peak edit
EOT

exit 0

fi

########################################################################

get_DS_STATS

connexions_limit=$(echo ${DS_STATS} | jq ".licenseInfo.connections")
connexions_peak_view=$(echo ${DS_STATS} | jq ".connectionsStat.hour.view.max")
connexions_peak_edit=$(echo ${DS_STATS} | jq ".connectionsStat.hour.edit.max")

connexions_limit=${connexions_limit:-0}
connexions_peak_view=${connexions_peak_view:-0}
connexions_peak_edit=${connexions_peak_edit:-0}

cat<<EOT
connexions_limit.value ${connexions_limit}
connexions_peak_view.value ${connexions_peak_view}
connexions_peak_edit.value ${connexions_peak_edit}
EOT

########################################################################

exit 0
